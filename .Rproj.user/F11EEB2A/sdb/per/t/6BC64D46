{
    "collab_server" : "",
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\nlibrary(rworldmap)\nlibrary(RColorBrewer)\n\ncountry_data = read.csv(\"data/final_data.csv\")\n\n\nshinyServer(function(input, output) {\n  \n  output$ctrpt <- renderPlot({\n    country_data_subset = country_data[(country_data$AverageCtrpt>=input$range[1] & country_data$AverageCtrpt <=input$range[2]),]\n    sPDF <- joinCountryData2Map( country_data_subset, joinCode = \"ISO3\", nameJoinColumn = \"CountryCode\")\n    colourPalette <- rev(RColorBrewer::brewer.pal(5,'YlOrRd'))\n    mapParams <- mapCountryData( sPDF, \n                                 nameColumnToPlot= \"AverageCtrpt\" , \n                                 oceanCol = 'lightblue', \n                                 missingCountryCol = 'snow', \n                                 mapTitle = \"Global 2010's average Contraceptive Usage\", \n                                 addLegend = FALSE, \n                                 colourPalette = colourPalette )\n    do.call(addMapLegend, c( mapParams , legendLabels=\"all\"  , legendWidth=0.5 , legendIntervals=\"data\", legendMar = 2 ) )\n  })\n\n  output$growth <- renderPlot({\n    country_data_subset = country_data[(country_data$AverageCtrpt>=input$range[1] & country_data$AverageCtrpt <=input$range[2]),]\n    sPDF <- joinCountryData2Map( country_data_subset, joinCode = \"ISO3\", nameJoinColumn = \"CountryCode\")\n    colourPalette <- RColorBrewer::brewer.pal(5,'PuBuGn')\n    mapParams <- mapCountryData( sPDF, \n                                 nameColumnToPlot= \"AverageGrowthRate\" , \n                                 oceanCol = 'lightblue', \n                                 missingCountryCol = 'snow', \n                                 mapTitle = \"Global 2010's average Growth Rate\", \n                                 addLegend = FALSE, \n                                 colourPalette = colourPalette )\n    do.call(addMapLegend, c( mapParams , legendLabels=\"all\"  , legendWidth=0.5 , legendIntervals=\"data\", legendMar = 2 ) )\n  })\n  \n  output$gdp <- renderPlot({\n    country_data_subset = country_data[(country_data$AverageCtrpt>=input$range[1] & country_data$AverageCtrpt <=input$range[2]),]\n    sPDF <- joinCountryData2Map( country_data_subset, joinCode = \"ISO3\", nameJoinColumn = \"CountryCode\")\n    colourPalette <- RColorBrewer::brewer.pal(5,'YlGnBu')\n    mapParams <- mapCountryData( sPDF, \n                                 nameColumnToPlot= \"AverageGDP\" , \n                                 oceanCol = 'lightblue', \n                                 missingCountryCol = 'snow', \n                                 mapTitle = \"Global 2010's average GDP per capita\", \n                                 addLegend = FALSE, \n                                 colourPalette = colourPalette )\n    do.call(addMapLegend, c( mapParams , legendLabels=\"all\"  , legendWidth=0.5 , legendIntervals=\"data\", legendMar = 2 ) )\n  })\n  \n  output$fertility <- renderPlot({\n    country_data_subset = country_data[(country_data$AverageCtrpt>=input$range[1] & country_data$AverageCtrpt <=input$range[2]),]\n    sPDF <- joinCountryData2Map( country_data_subset, joinCode = \"ISO3\", nameJoinColumn = \"CountryCode\")\n    colourPalette <- RColorBrewer::brewer.pal(5,'RdPu')\n    mapParams <- mapCountryData( sPDF, \n                                 nameColumnToPlot= \"AverageFertility\" , \n                                 oceanCol = 'lightblue', \n                                 missingCountryCol = 'snow', \n                                 mapTitle = \"Global 2010's average Fertility Rate\", \n                                 addLegend = FALSE, \n                                 colourPalette = colourPalette )\n    do.call(addMapLegend, c( mapParams , legendLabels=\"all\"  , legendWidth=0.5 , legendIntervals=\"data\", legendMar = 2 ) )\n  })  \n  \n})\n",
    "created" : 1514098639380.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2271483137",
    "id" : "6BC64D46",
    "lastKnownWriteTime" : 1514101063,
    "last_content_update" : 1514101063102,
    "path" : "C:/Users/Danny/Desktop/UIUC/Fall 17/STAT385/project/stat385final/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}