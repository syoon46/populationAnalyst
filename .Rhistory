shiny::runApp()
runApp()
library(shiny)
library(rworldmap)
library(RColorBrewer)
country_data = read.csv("data\final_data.csv")
country_data = read.csv("data/final_data.csv")
sPDF <- joinCountryData2Map( country_data, joinCode = "ISO3", nameJoinColumn = "CountryCode")
colourPalette <- rev(RColorBrewer::brewer.pal(5,'YlOrRd'))
mapParams <- mapCountryData( sPDF,
nameColumnToPlot= "AverageCtrpt" ,
oceanCol = 'lightblue',
missingCountryCol = 'snow',
mapTitle = "Global 2010's average Contraceptive Usage",
addLegend = FALSE,
colourPalette = colourPalette )
do.call(addMapLegend, c( mapParams , legendLabels="all"  , legendWidth=0.5 , legendIntervals="data", legendMar = 2 ) )
do.call(addMapLegend, c( mapParams , legendLabels="all"  , legendWidth=0.5 , legendIntervals="data", legendMar = 2 ) )
mapParams <- mapCountryData( sPDF,
nameColumnToPlot= "AverageCtrpt" ,
oceanCol = 'lightblue',
missingCountryCol = 'snow',
mapTitle = "Global 2010's average Contraceptive Usage",
addLegend = FALSE,
colourPalette = colourPalette )
runApp()
shiny::runApp()
install.packages("shinythemes")
runApp()
country_data = read.csv("data/final_data.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
country_data = read.csv("final_data.csv")
getwd()
country_data = read.csv("data/final_data.csv")
subset = country_data[country_data$AverageCtrpt>=input$range[1] & country_data$AverageCtrpt <=input$range[2]]
subset = country_data[country_data$AverageCtrpt>=30 & country_data$AverageCtrpt <=70]
subset = country_data[(country_data$AverageCtrpt>=30 & country_data$AverageCtrpt <=70),]
subset
View(subset)
runApp()
